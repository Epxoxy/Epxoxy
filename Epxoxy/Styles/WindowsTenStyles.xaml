<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="DeleteButtonTemplateKey" TargetType="{x:Type Button}">
        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <Path x:Name="path" Data="M 0,0 L1,1 M 1,0 L 0,1 " Stroke="DimGray" Height="10" Width="10" Stretch="Fill" Margin="2"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" Value="Red" TargetName="path" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Color x:Key="Static.Background.Color" A="0" R="255" G="255" B="255" />
    <Color x:Key="Waring.MouseOver.Background.Color" A="255" R="232" G="17" B="35" />
    <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.05" To="{StaticResource Static.Background.Color}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.05" To="{StaticResource Waring.MouseOver.Background.Color}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M 0,0 10,10 M 10,0 L 0,10 " Stretch="None" Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                            </Path.CacheMode>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="Common.F5.Color" A="255" R="245" G="245" B="245"/>
    <Color x:Key="Common.F7A.Color" A="255" R="122" G="122" B="122"/>
    <Color x:Key="Common.All9.Color" A="255" R="153" G="153" B="153"/>
    <Color x:Key="Common.F83.Color" A="255" R="131" G="131" B="131"/>
    <Color x:Key="DefButton.Disabled.Border.Color" A="255" R="173" G="178" B="181"/>
    <Color x:Key="DefButton.Static.Border.Color" A="255" R="112" G="112" B="112"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="{StaticResource DefButton.Static.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource Common.F5.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource DefButton.Disabled.Border.Color}"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource Common.F83.Color}"/>
    <SolidColorBrush x:Key="WindowsTenButton.MouseOver.Brush"  Color="{StaticResource Common.F7A.Color}"/>
    <SolidColorBrush x:Key="NormalButton.Static.Background" Color="#FFDDDDDD"/>

    <ControlTemplate x:Key="WindowsTenButtonTwoControlTemplate" TargetType="{x:Type Button}">
        <Grid x:Name="root" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="root" Duration="0:0:0.1" To="1"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="root" Duration="0:0:0.1" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" >
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="root" Duration="0:0:0.1" To="0.98"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="root" Duration="0:0:0.1" To="0.98"/>
                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontWeight)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource Pressed.FontWeight}" />
                            </ObjectAnimationUsingKeyFrames>-->
                            <ColorAnimation Duration="0:0:0.05" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource Common.All9.Color}" />
                            <ColorAnimation Duration="0:0:0.05" Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource Common.All9.Color}"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <ScaleTransform />
            </Grid.RenderTransform>
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}" >
                <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <Rectangle x:Name="MouseOverBorder" Stroke="{StaticResource WindowsTenButton.MouseOver.Brush}" StrokeThickness="2" Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="WinTenBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource NormalButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Template" Value="{StaticResource WindowsTenButtonTwoControlTemplate}" />
    </Style>


    <Style x:Key="SelectedFlagRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="ArrowBorder" Stroke="Black" StrokeThickness="2" Visibility="Collapsed" SnapsToDevicePixels="True"/>
                        <Canvas x:Name="CheckBlock" Height="16" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed">
                            <Rectangle Fill="Black" Height="16" Width="16"/>
                            <Path Data="M15,3 L8,12 3,8" Stroke="White" StrokeThickness="2" StrokeLineJoin="Round"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ArrowBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ArrowBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region  *********  RadioButton  *********-->

    <SolidColorBrush x:Key="RadioButton.Static.Ellipse.Stroke" Color="DimGray" />
    <SolidColorBrush x:Key="RadioButton.Checked.Ellipse.Stroke" Color="#0078d7" />
    <Style x:Key="WindowsTenRadioButtonLightStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Unchecked" To="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1" To="1" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Checked" To="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1" To="0" />
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1" To="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0" To="1" />
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0" To="0" />
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid Height="16" Width="16" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.CacheMode>
                                    <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                                </Grid.CacheMode>
                                <Ellipse x:Name="ellipse" Stroke="{StaticResource RadioButton.Static.Ellipse.Stroke}" StrokeThickness="2"/>
                                <Ellipse Fill="{StaticResource RadioButton.Checked.Ellipse.Stroke}" Height="8" Width="8" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>
                            <ContentPresenter Grid.Column="1" RecognizesAccessKey="True"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                  HorizontalAlignment="Left" VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource RadioButton.Checked.Ellipse.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->


    <Color x:Key="ToggleButton.Checked.Background.Color" A="255" R="76" G="74" B="72"/>
    <Color x:Key="ToggleButton.Disable.Background.Color" A="255" R="196" G="196" B="196"/>
    <SolidColorBrush x:Key="ToggleButton.MouseOver.Border" Color="{StaticResource Common.F7A.Color}"/>
    <SolidColorBrush x:Key="ToggleButton.Checked.Background" Color="#FF4C4A48"/>
    <SolidColorBrush x:Key="ToggleButton.Disable.Background" Color="#FFE3E3E3"/>
    <SolidColorBrush x:Key="ToggleButton.Disable.Foreground" Color="{StaticResource Common.F83.Color}"/>
    <SolidColorBrush x:Key="ToggleButton.Normal.Background" Color="{StaticResource Common.F5.Color}" />
    <ControlTemplate x:Key="DarkToggleButtonTemplateKey" TargetType="{x:Type ToggleButton}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="container"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(SkewTransform.AngleX)"
                                                     To="-5"
                                                     Duration="00:00:0.2"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ToggleButton.Checked.Background.Color}"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="container" RenderTransformOrigin="0,1">
                <Grid.RenderTransform>
                    <SkewTransform  AngleX="0"/>
                </Grid.RenderTransform>
                <ContentPresenter Grid.Column="1" x:Name="contentPresenter" TextBlock.FontSize="{TemplateBinding FontSize}"
                                  Focusable="False" HorizontalAlignment="Left" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"/>
                <Rectangle x:Name="MouseOverBorder" Stroke="{StaticResource ToggleButton.MouseOver.Border}" StrokeThickness="2" Visibility="Collapsed"
                                   Fill="Transparent" SnapsToDevicePixels="True" Focusable="False" IsHitTestVisible="False"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="DimGray" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButton.Checked.Background}" />
                <Setter Property="TextElement.Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{StaticResource ToggleButton.Disable.Foreground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DarkToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToggleButton.Normal.Background}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template" Value="{StaticResource DarkToggleButtonTemplateKey}"/>
    </Style>


</ResourceDictionary>