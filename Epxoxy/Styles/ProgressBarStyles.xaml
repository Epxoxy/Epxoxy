<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Epxoxy.Converters">
    <SolidColorBrush x:Key="ProgressBar.Progress" Color="SkyBlue"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
    <Style x:Key="SimpleProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <DiscretePointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <DiscretePointKeyFrame KeyTime="0:0:0.5" Value="-0.5,0.5"/>
                                            <SplinePointKeyFrame KeyTime="0:0:3" Value="1.5,0.5" KeySpline="0,0.9,1,0.1"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform />
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <converters:MathConverter x:Key="MathConverter" />
    <Style x:Key="LightProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                        </Grid>
                        <Canvas x:Name="IndeterminateBar" Height="4" ClipToBounds="True">
                            <Ellipse x:Name="c1" Height="4" Width="4" Fill="SkyBlue" RenderTransformOrigin="0.5,0.5" >
                                <Ellipse.RenderTransform>
                                    <TranslateTransform/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse x:Name="c2" Height="4" Width="4" Fill="SkyBlue" RenderTransformOrigin="0.5,0.5" >
                                <Ellipse.RenderTransform>
                                    <TranslateTransform/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse x:Name="c3" Height="4" Width="4" Fill="SkyBlue" RenderTransformOrigin="0.5,0.5" >
                                <Ellipse.RenderTransform>
                                    <TranslateTransform/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse x:Name="c4" Height="4" Width="4" Fill="SkyBlue" RenderTransformOrigin="0.5,0.5" >
                                <Ellipse.RenderTransform>
                                    <TranslateTransform/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Ellipse x:Name="c5" Height="4" Width="4" Fill="SkyBlue" RenderTransformOrigin="0.5,0.5" >
                                <Ellipse.RenderTransform>
                                    <TranslateTransform/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <Grid.Resources>
                            <Storyboard x:Key="IndeterminateStoryboard" RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="c1">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-4"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-4"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2"  KeySpline="0,0.9,1,0.1"
                                                                          Value="{Binding ActualWidth, ElementName=IndeterminateBar, Converter={StaticResource MathConverter}, ConverterParameter=28, NotifyOnSourceUpdated=True}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="c2">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-10"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.15" Value="-10"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.15" KeySpline="0,0.9,1,0.1"
                                                                          Value="{Binding ActualWidth, ElementName=IndeterminateBar, Converter={StaticResource MathConverter}, ConverterParameter=22}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="c3">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-16"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.3" Value="-16"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.3" KeySpline="0,0.9,1,0.1"
                                                                          Value="{Binding ActualWidth, ElementName=IndeterminateBar, Converter={StaticResource MathConverter}, ConverterParameter=16}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="c4">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-22"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.45" Value="-22"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.45" KeySpline="0,0.9,1,0.1"
                                                                          Value="{Binding ActualWidth, ElementName=IndeterminateBar, Converter={StaticResource MathConverter}, ConverterParameter=10}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="c5">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-28"/>
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.6" Value="-28"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:2.6" KeySpline="0,0.9,1,0.1" 
                                                                          Value="{Binding ActualWidth, ElementName=IndeterminateBar, Converter={StaticResource MathConverter}, ConverterParameter=4}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate" Storyboard="{StaticResource IndeterminateStoryboard}"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>