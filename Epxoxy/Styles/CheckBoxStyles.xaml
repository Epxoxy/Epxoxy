<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region ********** Animation CheckBox Style ************ -->

    <SolidColorBrush x:Key="CheckBox.Checked.Fill" Color="SkyBlue"/>
    <SolidColorBrush x:Key="CheckBox.Unchecked.Fill" Color="#747474"/>
    <Style x:Key="AnimationCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" Margin="{TemplateBinding Padding}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="1"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="8" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="12" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="40" Duration="0"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="14" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="14" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Width"
                                                         To="14" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="Height"
                                                         To="2" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckHolder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                         To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator.Bullet>
                            <Grid ClipToBounds="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="18" Height="18">
                                <Grid x:Name="CheckHolder" Opacity="1" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.8,0.5"  Width="14" Height="14">
                                    <Border x:Name="NormalBorder" Opacity="1" SnapsToDevicePixels="True" BorderBrush="{StaticResource CheckBox.Unchecked.Fill}" BorderThickness="2"/>
                                    <Border x:Name="CheckedBorder" Opacity="1" SnapsToDevicePixels="True" BorderBrush="{StaticResource CheckBox.Checked.Fill}" BorderThickness="0 0 2 2"/>
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion -->

    <!--#region ********** Simple CheckBox Style ************ -->

    <SolidColorBrush x:Key="CheckBox.OptionMark.Static.Fill" Color="#FF707070" />
    <SolidColorBrush x:Key="CheckBox.OptionMark.Pressed.Fill" Color="#FF212121" />
    <SolidColorBrush x:Key="CheckBox.MouseOver.BorderBrush" Color="#3DA254" />
    <SolidColorBrush x:Key="CheckBox.Checked.Background" Color="SkyBlue" />
    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder" BorderThickness="2" BorderBrush="Gray" CornerRadius="2" Margin="1,1,4,1" SnapsToDevicePixels="True">
                <Grid x:Name="markGrid">
                    <Path x:Name="optionMark" Data="F1M10,1L4.7,9 4.5,9 0,5 1.3,3.5 4.3,6 8.3,0 10,1.2z" Fill="White" Margin="1" Opacity="0" Stretch="None"/>
                    <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.BorderBrush}"/>
                <Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.BorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.OptionMark.Static.Fill}"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBox.OptionMark.Static.Fill}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.OptionMark.Pressed.Fill}"/>
                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBox.OptionMark.Pressed.Fill}"/>
            </Trigger>
            <!--<Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                <Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="0" />
            </Trigger>-->
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SimpleCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource CheckBoxControlTemplate}">
        </Setter>
    </Style>
    <!--#endregion -->

</ResourceDictionary>