<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Epxoxy.Controls"
                    xmlns:previous="clr-namespace:Epxoxy.Controls.Previous"
                    xmlns:converters="clr-namespace:Epxoxy.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Epxoxy;component/Styles/Converters.xaml" /> 
        <ResourceDictionary Source="/Epxoxy;component/Styles/WindowsTenStyles.xaml" />
        <ResourceDictionary Source="/Epxoxy;component/Styles/TransitioningContentControlStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Visibility x:Key="Visibility.Visible">Visible</Visibility>
    <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
    <!--#region ********* Dialog *********-->

    <Color x:Key="TransWhite" A="220" R="255" G="255" B="255" />
    <SolidColorBrush x:Key="ContentDialog.Normal.Background" Color="{StaticResource TransWhite}" />

    <Style TargetType="{x:Type local:ContentDialog}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <!--<Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />-->
        <Setter Property="Background" Value="{StaticResource ContentDialog.Normal.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ContentDialog}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Loading">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="dialogBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:0.05" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="dialogBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:0.05" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" Duration="00:00:0.05" To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unloading">
                                    <Storyboard x:Name="UnloadingStoryboard">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="dialogBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:0.10" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="dialogBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:0.10" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" Duration="00:00:0.05" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:0.10" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BgRect" Fill="{TemplateBinding Background}"/>
                        <Border x:Name="dialogBorder" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Background="White" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                BorderThickness="1" 
                                MinWidth="450" MinHeight="150" Visibility="Visible">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{x:Static SystemParameters.WindowGlassColor}"/>
                            </Border.BorderBrush>
                            <Border.RenderTransform>
                                <ScaleTransform />
                            </Border.RenderTransform>
                            <Border.CacheMode>
                                <BitmapCache EnableClearType="True" RenderAtScale="1" />
                            </Border.CacheMode>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Background="{TemplateBinding TitleBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_CloseButton" Grid.Column="1" BorderThickness="0" Background="Transparent" 
                                                HorizontalAlignment="Right" VerticalAlignment="Center" Padding="12, 7" 
                                                Template="{StaticResource DeleteButtonTemplateKey}"/>
                                    <TextBlock Margin="12,7" Text="{TemplateBinding Title}" FontSize="20" />
                                </Grid>
                                <ContentControl Margin="12,0" Grid.Row="1" Content="{TemplateBinding Content}" FontSize="16"/>
                                <Grid Grid.Row="2"  Margin="12,4,12,7" MinHeight="38">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Content="{TemplateBinding BottomToolContent}"/>
                                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                        <Button x:Name="PART_PrimaryButton"
                                                     Style="{StaticResource WinTenBtnStyle}"
                                                    Content="{TemplateBinding PrimaryButtonText}" MinWidth="80"
                                                    Command="{TemplateBinding PrimaryButtonCommand}" Margin="4,4,12,4"
                                                    CommandParameter="{TemplateBinding PrimaryButtonCommandParameter}"
                                                    CommandTarget="{TemplateBinding PrimaryButtonCommandTarget}"/>
                                        <Button x:Name="PART_SecondaryButton" Style="{StaticResource WinTenBtnStyle}"
                                                Content="{TemplateBinding SecondaryButtonText}" MinWidth="80"
                                                    Command="{TemplateBinding SecondaryButtonCommand}" Margin="0,4"
                                                    CommandParameter="{TemplateBinding SecondaryButtonCommandParameter}"
                                                    CommandTarget="{TemplateBinding SecondaryButtonCommandTarget}"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ***************************************** -->

    <!--#region **********Underline**********-->

    <Style TargetType="{x:Type local:Underline}">
        <Setter Property="Background" Value="SkyBlue"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="2"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <CircleEase x:Key="UnderlineEasingFunction" EasingMode="EaseOut"/>
                    </ControlTemplate.Resources>
                    <Border x:Name="UnderlineBorder"
                            Background="{TemplateBinding Background}"
                            IsHitTestVisible="False"
                            Height="{TemplateBinding Height}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            RenderTransformOrigin="0.5,0.5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ActivationStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Inactive" To="Active">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             Duration="0:0:0.3"
                                                             EasingFunction="{StaticResource UnderlineEasingFunction}"
                                                             To="1"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Active" To="Inactive">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             Duration="0:0:0.3"
                                                             EasingFunction="{StaticResource UnderlineEasingFunction}"
                                                             To="0"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0"
                                                         To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="0" ScaleY="1" x:Name="ScaleTransform" />
                        </Border.RenderTransform>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********* ToggleSwitch **********-->

    <Color x:Key="ToggleSwitch.Checked.InnderBorder.Background" A="255" R="137" G="175" B="237" />
    <Color x:Key="ToggleSwitch.Checked.InnerEllipse.Fill" A="255" R="33" G="109" B="234" />
    <Color x:Key="ToggleSwitch.Unchecked.InnderBorder.Background" A="255" R="120" G="120" B="120" />
    <Color x:Key="ToggleSwitch.Unchecked.InnerEllipse.Fill" A="255" R="0" G="0" B="0" />
    <SolidColorBrush x:Key="ToggleSwitch.InnderBorder.Background" Color="{StaticResource ToggleSwitch.Unchecked.InnderBorder.Background}" />
    <SolidColorBrush x:Key="ToggleSwitch.InnerEllipse.Fill" Color="{StaticResource ToggleSwitch.Unchecked.InnerEllipse.Fill}" />
    <Color x:Key="OnOffOffRight" A="255" R="0" G="0" B="0" />
    <SolidColorBrush x:Key="onoffoffrightscb" Color="#000000" />
    <ControlTemplate x:Key="ToggleSwitchControlTemplate" TargetType="{x:Type local:ToggleSwitch}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="innerEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="innerEllipse" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            To="{StaticResource ToggleSwitch.Checked.InnerEllipse.Fill}"></ColorAnimation>
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="innerBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ToggleSwitch.Checked.InnderBorder.Background}"></ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="innerEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <!--216DEA-->
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="innerEllipse" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" 
                                            To="{StaticResource ToggleSwitch.Unchecked.InnerEllipse.Fill}"></ColorAnimation>
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="innerBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                            To="{StaticResource ToggleSwitch.Unchecked.InnderBorder.Background}"></ColorAnimation>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition x:Name="Column3" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentSource="{TemplateBinding Content}"></ContentPresenter>
                <Border x:Name="innerBorder" SnapsToDevicePixels="True" UseLayoutRounding="True" 
                        Grid.Column="1" Margin="3,0,3,0" CornerRadius="8" 
                        Background="{StaticResource ToggleSwitch.InnderBorder.Background}"
                        Height="16" Width="32" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Ellipse x:Name="innerEllipse" Height="16" Width="16" Fill="{StaticResource ToggleSwitch.InnerEllipse.Fill}">
                        <Ellipse.RenderTransform>
                            <TranslateTransform X="-8" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Border>
                <TextBlock x:Name="stateText" Text="{TemplateBinding OffText}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Grid.Column" TargetName="innerBorder" Value="0" />
                <Setter Property="Grid.ColumnSpan" TargetName="innerBorder" Value="2" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Text" TargetName="stateText" Value="{Binding OnText, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="EnabledStateTag" Value="False">
                <Setter Property="Width" TargetName="Column3" Value="0" />
                <Setter Property="Margin" TargetName="stateText" Value="0,0,0,0" />
                <Setter Property="Visibility" TargetName="stateText" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:ToggleSwitch}">
        <!--<Setter Property="Background" Value="{StaticResource Common.Transparent}"/>-->
        <!--<Setter Property="FontSize" Value="16"/>-->
        <Setter Property="Padding" Value="7,7" />
        <Setter Property="OnText" Value="On" />
        <Setter Property="OffText" Value="Off" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template" Value="{StaticResource ToggleSwitchControlTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--#endregion-->

    <!--#region ********** Color picker **************-->

    <converters:HueToColorConverter x:Key="HueToColorConverter"/>

    <Style x:Key="SpectrumSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="{TemplateBinding Height}" Margin="0,-8">
                        <Path Data="M0,0 1,1 0,2z" Stretch="Uniform" Fill="Black" HorizontalAlignment="Left"/>
                        <Path Data="M0,1 1,0 1,2z" Stretch="Uniform" Fill="Black" HorizontalAlignment="Right"/>
                        <Rectangle Fill="Transparent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SpectrumSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SpectrumSlider}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                        <Track x:Name="PART_Track" Grid.Column="1" >
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Focusable="False" Style="{StaticResource SpectrumSliderThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="12" Width="10">
                        <Polygon Points="1,0 0,1 2,1 1,0  0,1 0,2 2,2 2,1 0,1" StrokeLineJoin="Round" Fill="White" Stretch="Fill"/>
                        <Polygon Points="1,0 0,1 2,1 1,0 0,1 0,2 2,2 2,1" StrokeLineJoin="Round" Stroke="Black" Fill="Black" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ColorSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorSlider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8*" />
                            <RowDefinition Height="13" />
                            <RowDefinition Height="12*" />
                        </Grid.RowDefinitions>
                        <Border Margin="1" Grid.Row="1" Background="{TemplateBinding Background}" />
                        <Border Margin="1" Grid.Row="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="{Binding FromColor, RelativeSource={RelativeSource TemplatedParent}}" Offset="0" />
                                    <GradientStop Color="{Binding ToColor,RelativeSource={RelativeSource TemplatedParent}}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Margin="1" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Track Grid.Row="1" Margin="-3,0,-2,0" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource ColorSliderThumbStyle}">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform Y="5" />
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HsvControlThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Height="12" Width="12">
                        <Ellipse Stroke="White" Margin="0" />
                        <Ellipse Stroke="Black" Margin="1" />
                        <Ellipse Stroke="White" Margin="2" />
                        <Line Stroke="#80000000" X1="0" Y1="6" X2="12" Y2="6" />
                        <Line Stroke="#80000000" X1="6" Y1="0" X2="6" Y2="12" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HsvControl}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HsvControl}">
                    <Grid>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Offset="0" Color="#FFFFFFFF" />
                                    <GradientStop Offset="1"
                                Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Converter={StaticResource HueToColorConverter}}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#00000000" />
                                    <GradientStop Offset="1" Color="#FF000000" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
                        <!--<Grid>
                            <Border BorderBrush="#A0808080" BorderThickness="1,1,0,0"/>
                            <Border BorderBrush="#A0F0F0F0" BorderThickness="0,0,1,1"/>
                        </Grid>-->
                        <Canvas ClipToBounds="true">
                            <Thumb Canvas.Left="-5" Canvas.Top="-5" x:Name="PART_Thumb"
                                   Style="{StaticResource HsvControlThumbStyle}">
                                <Thumb.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Thumb.RenderTransform>
                            </Thumb>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush x:Key="CheckersBrush" Viewport="0,0,11,11" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M0,0 L2,0 2,2, 0,2Z" Brush="White" />
                <GeometryDrawing Geometry="M0,1 L2,1 2,2 1,2 1,0 0,0Z" Brush="LightGray" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="ColorBlockListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <ContentPresenter />
                        <Rectangle x:Name="ArrowBorder" Stroke="Black" StrokeThickness="2" Visibility="Collapsed"/>
                        <Canvas x:Name="CheckBlock" Height="16" Width="16" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed">
                            <Rectangle Fill="Black" Height="16" Width="16"/>
                            <Path Data="M15,3 L8,12 3,8" Stroke="White" StrokeThickness="2" StrokeLineJoin="Round"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ArrowBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ArrowBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ColorPickerPane}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPickerPane}">
                    <Grid>
                        <ListView x:Name="PART_ColorListRoot" Margin="1" BorderThickness="0"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ItemContainerStyle="{StaticResource ColorBlockListViewItemStyle}"
                                  SelectedItem="{Binding SelectedColor, ElementName=PART_HSV}">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle Margin="1">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Grid x:Name="PART_Custom" MaxHeight="400" MaxWidth="600" Margin="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="2*" MinWidth="180"/>
                            </Grid.ColumnDefinitions>
                            <local:HsvControl x:Name="PART_HSV" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <local:SpectrumSlider Grid.Column="1" Margin="4,0" Width="20" Hue="{Binding Hue, ElementName=PART_HSV, Mode=TwoWay}"/>
                            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Grid.Column="2" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Padding="4" VerticalAlignment="Center"> 
                                            <Run Text="A : "/> <Run Text="{Binding Alpha, NotifyOnSourceUpdated=True}"/>
                                </TextBlock>
                                <TextBlock Grid.Row="1" Padding="4" VerticalAlignment="Center">
                                            <Run Text="R : "/><Run Text="{Binding Red}"/>
                                </TextBlock>
                                <TextBlock Grid.Row="2" Padding="4" VerticalAlignment="Center">
                                            <Run Text="G : "/><Run Text="{Binding Green}"/>
                                </TextBlock>
                                <TextBlock Grid.Row="3" Padding="4" VerticalAlignment="Center">
                                            <Run Text="B : "/><Run Text="{Binding Blue}"/>
                                </TextBlock>
                                <TextBlock Grid.Row="4" Text="Hue" Padding="4" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="5" Text="Saturation" Padding="4"  VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="6" Text="Brightness" Padding="4" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="7" Text="HEX" Padding="4" VerticalAlignment="Center"/>
                                <local:ColorSlider Grid.Column="1" Value="{Binding Alpha}" Maximum="255" Height="25"
                                                       FromColor="#00000000" ToColor="#FF000000" Background="{StaticResource CheckersBrush}"/>
                                <Slider Grid.Row="1" Grid.Column="1" Maximum="255" Value="{Binding Red}" VerticalAlignment="Center"/>
                                <Slider Grid.Row="2" Grid.Column="1" Maximum="255" Value="{Binding Green}" VerticalAlignment="Center"/>
                                <Slider Grid.Row="3" Grid.Column="1" Maximum="255" Value="{Binding Blue}" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Hue}" Margin="1" Padding="4" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding Saturation}" Margin="1" Padding="4" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding Brightness}" Margin="1" Padding="4" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding SelectedColor}" Margin="1" Padding="4" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Mode" Value="Basic">
                            <Setter Property="Visibility" TargetName="PART_ColorListRoot" Value="Visible" />
                            <Setter Property="Visibility" TargetName="PART_Custom" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Mode" Value="Custom">
                            <Setter Property="Visibility" TargetName="PART_ColorListRoot" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_Custom" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ************************************-->

    <!--#region *********** SplitView **********-->

    <SolidColorBrush x:Key="SplitView.Pane.Static.Background" Color="#f4f4f4" />
    <SolidColorBrush x:Key="SplitView.Content.Static.Background" Color="White" />

    <ControlTemplate x:Key="DefaultSplitViewControlTemplate" TargetType="{x:Type local:SplitView02}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="OverlayCloseToOpenStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" >
                        <SplineDoubleKeyFrame KeyTime="00:00:00" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.TranslateOverlayFrom, ElementName=ProxyElement}"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:0.35" Value="0" KeySpline="0.1,0.9 0.2,1.0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="OverlayOpenToCloseStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" >
                        <SplineDoubleKeyFrame KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.TranslateOverlayFrom, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality"  x:Key="CompactInlineCloseToOpenStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <SplineDoubleKeyFrame KeyTime="00:00:00.350" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.TranslateCompactToOpenLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin"
                                        BeginTime="00:00:00.350" Duration="00:00:00" To="{Binding DataContext.AdaptCompactToOpenMargin, ElementName=ProxyElement}" />
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactInlineOpenToCloseStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.TranslateCompactToOpenLength, ElementName=ProxyElement}" />
                        <SplineDoubleKeyFrame KeyTime="00:00:00.120" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin"  BeginTime="00:00:0.12" Duration="00:00:00"/>
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactOverlayCloseToOpenStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth" >
                        <SplineDoubleKeyFrame KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.OpenPaneLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactOverlayOpenToCloseStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding DataContext.OpenPaneLength, ElementName=ProxyElement}" />
                        <SplineDoubleKeyFrame KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.CompactPaneLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="InlineCloseToOpenStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <SplineDoubleKeyFrame KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding DataContext.NegativeTranslateOverlayFrom, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin"
                                        BeginTime="00:00:0.35" Duration="00:00:00" To="{Binding DataContext.AdaptOpenThickness, ElementName=ProxyElement}" />
                </Storyboard>
                <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality" x:Key="InlineOpenToCloseStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.OpenPaneLength, ElementName=ProxyElement}"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" BeginTime="00:00:0.12" Duration="00:00:00" To="0,0,0,0" />
                </Storyboard>

                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="OverlayOpenStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" />
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="InlineOpenStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.NegativeTranslateOverlayFrom, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" 
                                                Duration="00:00:00" To="{Binding DataContext.AdaptOpenThickness, ElementName=ProxyElement}" />
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="InlineCloseStoryboard">
                    <DoubleAnimation Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" Duration="00:00:00"/>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" Duration="00:00:00" To="0,0,0,0" />
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactInlineOpenStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.TranslateCompactToOpenLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin"
                                                Duration="00:00:00" To="{Binding DataContext.AdaptCompactToOpenMargin, ElementName=ProxyElement}" />
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactInlineCloseStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.CompactPaneLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Width" >
                        <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="{Binding DataContext.CompactPaneLength, ElementName=ProxyElement}"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactOverlayOpenStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding DataContext.OpenPaneLength, ElementName=ProxyElement}" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard RenderOptions.BitmapScalingMode="LowQuality" x:Key="CompactOverlayCloseStoryboard">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding DataContext.CompactPaneLength, ElementName=ProxyElement}" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding DataContext.CompactPaneLength, ElementName=ProxyElement}" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Border.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="OverlayOpenPane" To="OverlayClosePane" Storyboard="{StaticResource OverlayOpenToCloseStoryboard}"/>
                        <VisualTransition From="OverlayClosePane" To="OverlayOpenPane" Storyboard="{StaticResource OverlayCloseToOpenStoryboard}"/>
                        <VisualTransition From="CompactInlineClosePane" To="CompactInlineOpenPane" Storyboard="{StaticResource CompactInlineCloseToOpenStoryboard}"/>
                        <VisualTransition From="CompactInlineOpenPane" To="CompactInlineClosePane" Storyboard="{StaticResource CompactInlineOpenToCloseStoryboard}"/>
                        <VisualTransition From="CompactOverlayClosePane" To="CompactOverlayOpenPane" Storyboard="{StaticResource CompactOverlayCloseToOpenStoryboard}"/>
                        <VisualTransition From="CompactOverlayOpenPane" To="CompactOverlayClosePane" Storyboard="{StaticResource CompactOverlayOpenToCloseStoryboard}"/>
                        <VisualTransition From="InlineClosePane" To="InlineOpenPane" Storyboard="{StaticResource InlineCloseToOpenStoryboard}"/>
                        <VisualTransition From="InlineOpenPane" To="InlineClosePane" Storyboard="{StaticResource InlineOpenToCloseStoryboard}"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="OverlayOpenPane" Storyboard="{StaticResource OverlayOpenStoryboard}"/>
                    <VisualState x:Name="OverlayClosePane"/>
                    <VisualState x:Name="InlineOpenPane" Storyboard="{StaticResource InlineOpenStoryboard}"/>
                    <VisualState x:Name="InlineClosePane" Storyboard="{StaticResource InlineCloseStoryboard}"/>
                    <VisualState x:Name="CompactInlineOpenPane" Storyboard="{StaticResource CompactInlineOpenStoryboard}"/>
                    <VisualState x:Name="CompactInlineClosePane" Storyboard="{StaticResource CompactInlineCloseStoryboard}"/>
                    <VisualState x:Name="CompactOverlayOpenPane" Storyboard="{StaticResource CompactOverlayOpenStoryboard}"/>
                    <VisualState x:Name="CompactOverlayClosePane" Storyboard="{StaticResource CompactOverlayCloseStoryboard}"/>
                    <VisualState x:Name="NoneState" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding CompactPaneLength, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="{Binding CompactPaneLength, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid.ColumnDefinitions>
                <FrameworkElement x:Name="ProxyElement" Width="0" Height="0" Focusable="False" Visibility="Collapsed" DataContext="{TemplateBinding TemplateSettings}"/>
                <Grid x:Name="PART_ContentLayer" Grid.ColumnSpan="3" Margin="0,0,0,0" RenderTransformOrigin="0.5, 0.5" Background="{TemplateBinding Background}">
                    <Grid.RenderTransform>
                        <TranslateTransform X="0" x:Name="ContentTranslateTransform"/>
                    </Grid.RenderTransform>
                    <ContentPresenter x:Name="PART_Content" ContentSource="{TemplateBinding Content}" Focusable="False" />
                    <Rectangle x:Name="LightDismissLayer" Visibility="Collapsed" Fill="Transparent"/>
                </Grid>
                <local:AdaptHeightPanel x:Name="PART_PaneLayer" Grid.ColumnSpan="3" HorizontalAlignment="Left" Panel.ZIndex="1" Background="{TemplateBinding PaneBackground}"
                                        Width="{TemplateBinding OpenPaneLength}" ClipWidth="{TemplateBinding OpenPaneLength}" Visibility="Collapsed" ClipToBounds="True">
                    <local:AdaptHeightPanel.CacheMode>
                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                    </local:AdaptHeightPanel.CacheMode>
                    <local:AdaptHeightPanel.RenderTransform>
                        <TranslateTransform X="0" x:Name="PaneTranslateTransform"/>
                    </local:AdaptHeightPanel.RenderTransform>
                    <ContentPresenter x:Name="PART_PaneContent" Width="{TemplateBinding OpenPaneLength}" Content="{TemplateBinding Pane}" />
                </local:AdaptHeightPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="DisplayMode" Value="Overlay">
                <Setter Property="Margin" TargetName="PART_ContentLayer" Value="0,0,0,0" />
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="Inline">
                <Setter Property="Panel.ZIndex" TargetName="PART_PaneLayer" Value="-1" />
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="CompactInline">
                <Setter Property="Panel.ZIndex" TargetName="PART_PaneLayer" Value="-1" />
                <Setter Property="Visibility" TargetName="PART_PaneLayer" Value="Visible" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="CompactOverlay">
                <Setter Property="Visibility" TargetName="PART_PaneLayer" Value="Visible" />
            </Trigger>
            <Trigger Property="PanePlacement" Value="Right">
                <Setter Property="HorizontalAlignment" TargetName="PART_PaneLayer" Value="Right" />
                <Setter Property="FlowDirection" TargetName="PART_PaneLayer" Value="RightToLeft" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPaneOpen" Value="True" />
                    <Condition Property="IsLightDismissEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="LightDismissLayer" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Left"/>
                    <Condition Property="DisplayMode" Value="CompactInline"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Left"/>
                    <Condition Property="DisplayMode" Value="CompactOverlay"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Right"/>
                    <Condition Property="DisplayMode" Value="CompactInline"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentLayer" Value="2" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Right"/>
                    <Condition Property="DisplayMode" Value="CompactOverlay"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentLayer" Value="2" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:SplitView02}">
        <Setter Property="PaneBackground" Value="{StaticResource SplitView.Pane.Static.Background}" />
        <Setter Property="Background" Value="{StaticResource SplitView.Content.Static.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource DefaultSplitViewControlTemplate}" />
    </Style>

    <!--#endregion-->

    <!--#region ************** Previous SplitView *****************-->

    <ControlTemplate x:Key="DefaultPreviousSplitViewControlTemplate" TargetType="{x:Type previous:SplitView}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="OverlayOpenPane" To="OverlayClosePane">
                            <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" >
                                    <SplineDoubleKeyFrame x:Name="negativeOpen00" KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="-160"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="OverlayClosePane" To="OverlayOpenPane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" >
                                    <SplineDoubleKeyFrame x:Name="negativeOpen01" KeyTime="00:00:00" KeySpline="0.1,0.9 0.2,1.0" Value="-160"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>

                        <VisualTransition From="CompactInlineClosePane" To="CompactInlineOpenPane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                    <SplineDoubleKeyFrame x:Name="compactToOpen00" KeyTime="00:00:00.350" KeySpline="0.1,0.9 0.2,1.0" Value="112"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="CompactInlineOpenPane" To="CompactInlineClosePane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                    <DiscreteDoubleKeyFrame x:Name="compactToOpen01" KeyTime="00:00:00" Value="112" />
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.120" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>

                        <VisualTransition From="CompactOverlayClosePane" To="CompactOverlayOpenPane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth" >
                                    <SplineDoubleKeyFrame x:Name="toOpenLength00" KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="160"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="CompactOverlayOpenPane" To="CompactOverlayClosePane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth">
                                    <DiscreteDoubleKeyFrame x:Name="toOpenLength03" KeyTime="0:0:0" Value="160" />
                                    <SplineDoubleKeyFrame x:Name="toCompactLength00" KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="InlineClosePane" To="InlineOpenPane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                    <SplineDoubleKeyFrame x:Name="orientedOpenLength00" KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="160"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                        <VisualTransition From="InlineOpenPane" To="InlineClosePane">
                            <Storyboard Timeline.DesiredFrameRate="60" RenderOptions.BitmapScalingMode="LowQuality">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <!--Adapt content layout if need-->
                                <!--<ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" Duration="00:00:00" To="0,0,0,0" />-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                    <DiscreteDoubleKeyFrame x:Name="toOpenLength02" KeyTime="00:00:00" Value="160"/>
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState Name="OverlayOpenPane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="PaneTranslateTransform" Storyboard.TargetProperty="X" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="OverlayClosePane" />
                    <VisualState Name="InlineOpenPane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                <DiscreteDoubleKeyFrame x:Name="orientedOpenLength01" KeyTime="00:00:00" Value="160"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="InlineClosePane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <!--<ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>-->
                       </Storyboard>
                    </VisualState>
                    <VisualState Name="CompactInlineOpenPane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTranslateTransform" Storyboard.TargetProperty="X" >
                                <DiscreteDoubleKeyFrame x:Name="compactToOpen02"  KeyTime="00:00:00" Value="112"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="CompactInlineClosePane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width" >
                                <DiscreteDoubleKeyFrame x:Name="toCompactLength01" KeyTime="00:00:00" Value="48"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="Width" >
                                <DiscreteDoubleKeyFrame x:Name="toCompactLength04" KeyTime="00:00:00" Value="48"/>
                            </DoubleAnimationUsingKeyFrames>
                            <!--<ThicknessAnimation Storyboard.TargetName="PART_ContentLayer" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>-->
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="CompactOverlayOpenPane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width">
                                <DiscreteDoubleKeyFrame x:Name="toOpenLength04" KeyTime="0:0:0" Value="160" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="CompactOverlayClosePane">
                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneLayer" Storyboard.TargetProperty="ClipWidth">
                                <DiscreteDoubleKeyFrame x:Name="toCompactLength03" KeyTime="0:0:0" Value="48" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneContent" Storyboard.TargetProperty="Width">
                                <DiscreteDoubleKeyFrame x:Name="toCompactLength02" KeyTime="0:0:0" Value="48" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoneState" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding CompactPaneLength, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="{Binding CompactPaneLength, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="PART_ContentLayer" Grid.ColumnSpan="3" Margin="0,0,0,0" RenderTransformOrigin="0.5, 0.5" Background="{TemplateBinding Background}">
                    <Grid.RenderTransform>
                        <TranslateTransform X="0" x:Name="ContentTranslateTransform"/>
                    </Grid.RenderTransform>
                    <ContentPresenter x:Name="PART_Content" ContentSource="{TemplateBinding Content}" Focusable="False" />
                    <Rectangle x:Name="LightDismissLayer" Visibility="Collapsed" Fill="Transparent"/>
                </Grid>
                <local:AdaptHeightPanel x:Name="PART_PaneLayer" Grid.ColumnSpan="3" HorizontalAlignment="Left" Panel.ZIndex="1" Background="{TemplateBinding PaneBackground}"
                                          Width="{TemplateBinding OpenPaneLength}" ClipWidth="{TemplateBinding OpenPaneLength}" Visibility="Collapsed" ClipToBounds="True">
                    <local:AdaptHeightPanel.CacheMode>
                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                    </local:AdaptHeightPanel.CacheMode>
                    <local:AdaptHeightPanel.RenderTransform>
                        <TranslateTransform X="0" x:Name="PaneTranslateTransform"/>
                    </local:AdaptHeightPanel.RenderTransform>
                    <ContentPresenter x:Name="PART_PaneContent" Width="{TemplateBinding OpenPaneLength}" Content="{TemplateBinding Pane}" />
                </local:AdaptHeightPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="DisplayMode" Value="Overlay">
                <Setter Property="Margin" TargetName="PART_ContentLayer" Value="0,0,0,0" />
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="Inline">
                <Setter Property="Panel.ZIndex" TargetName="PART_PaneLayer" Value="-1" />
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="CompactInline">
                <Setter Property="Panel.ZIndex" TargetName="PART_PaneLayer" Value="-1" />
                <Setter Property="Visibility" TargetName="PART_PaneLayer" Value="Visible" />
            </Trigger>
            <Trigger Property="DisplayMode" Value="CompactOverlay">
                <Setter Property="Visibility" TargetName="PART_PaneLayer" Value="Visible" />
            </Trigger>
            <Trigger Property="PanePlacement" Value="Right">
                <Setter Property="HorizontalAlignment" TargetName="PART_PaneLayer" Value="Right" />
                <Setter Property="FlowDirection" TargetName="PART_PaneLayer" Value="RightToLeft" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPaneOpen" Value="True" />
                    <Condition Property="IsLightDismissEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="LightDismissLayer" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Left"/>
                    <Condition Property="DisplayMode" Value="CompactInline"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Left"/>
                    <Condition Property="DisplayMode" Value="CompactOverlay"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Right"/>
                    <Condition Property="DisplayMode" Value="CompactInline"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentLayer" Value="2" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="PanePlacement" Value="Right"/>
                    <Condition Property="DisplayMode" Value="CompactOverlay"/>
                </MultiTrigger.Conditions>
                <Setter Property="Grid.Column" TargetName="PART_ContentLayer" Value="0" />
                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentLayer" Value="2" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type previous:SplitView}">
        <Setter Property="PaneBackground" Value="{StaticResource SplitView.Pane.Static.Background}" />
        <Setter Property="Background" Value="{StaticResource SplitView.Content.Static.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource DefaultPreviousSplitViewControlTemplate}" />
    </Style>

    <!--#endregion-->
    
    <!--#region *********** ToggleButtonEx **********-->
    <Color x:Key="GrayBtn.MouseOver.Background.Color" A="255" R="229" G="229" B="229"/>
    <Color x:Key="GrayBtn.Pressed.Background.Color" A="255" R="202" G="202" B="203"/>
    <Color x:Key="Button.Disabled.Color" A="255" R="131" G="131" B="131"/>
    <ControlTemplate x:Key="GrayToggleButtonExTemplateKey" TargetType="{x:Type local:ToggleButtonEx}">
        <Border x:Name="border" Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True"
                Padding="{TemplateBinding Padding}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="{StaticResource GrayBtn.MouseOver.Background.Color}"></ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" >
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="{StaticResource GrayBtn.Pressed.Background.Color}"></ColorAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource Button.Disabled.Color}"></ColorAnimation>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                              TextElement.FontSize="{TemplateBinding FontSize}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}" ContentSource="{TemplateBinding Content}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" TargetName="contentPresenter" Value="{Binding OnContent, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" TargetName="contentPresenter" Value="{Binding OffContent, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:ToggleButtonEx}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Template" Value="{StaticResource GrayToggleButtonExTemplateKey}" />
    </Style>

    <!--#endregion-->

    <!--#region ********** MaskControl **********-->

    <SolidColorBrush x:Key="MaskRect.Fill" Color="LightGray" Opacity="0.6"/>
    <Style TargetType="{x:Type local:MaskControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="MaskFill" Value="{StaticResource MaskRect.Fill}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MaskControl}">
                    <Grid>
                        <Rectangle x:Name="PART_LightDismiss" StrokeThickness="{TemplateBinding StrokeThickness}"
                                   Stroke="{TemplateBinding Stroke}" Fill="{TemplateBinding MaskFill}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ***************************************** -->

    <!--#region ********** Toast **********-->

    <Style TargetType="{x:Type local:Toast}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Toast}">
                    <Border x:Name="border" RenderTransformOrigin="0.5,0.5" MinHeight="48" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.RenderTransform>
                            <TranslateTransform x:Name="TranslateTransform"/>
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ViewStates">
                                <VisualState x:Name="Initilized">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslateTransform" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="150"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Removing">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslateTransform" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:0.25" KeySpline="0.1,0.9 0.2,1.0" Value="300"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hide">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="rootgrid" Storyboard.TargetProperty="Margin">
                                            <LinearThicknessKeyFrame KeyTime="00:00:0.02" Value="1,1,0,4"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="rootgrid" Margin="0,0,0,4" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="7"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ContentControl Grid.Column="0" Grid.RowSpan="2" Content="{TemplateBinding Thumb}"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{TemplateBinding ToastTitle}" />
                            <ContentControl VerticalAlignment="Top" Padding="0,0,0,4" Grid.Row="1" Grid.Column="1" Content="{TemplateBinding ToastContent}"/>
                            <Button x:Name="PART_CloseBtn" Grid.Column="2" BorderThickness="0" Padding="2" MinHeight="25" Template="{StaticResource DeleteButtonTemplateKey}"
                                    Command="{x:Static local:Toast.RemoveToastCommand}" Background="Transparent" Foreground="Transparent"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsMouseOver" SourceName="PART_CloseBtn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="PART_CloseBtn" Value="Gray" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsMouseOver" SourceName="PART_CloseBtn" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="PART_CloseBtn" Value="Red" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** NumericUpDown **********-->

    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="BorderThickness" Value="1 1 1 1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDown}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Height="24">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <local:NumericTextBox x:Name="PART_TextBox" Grid.RowSpan="2" 
                                                  Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                  VerticalContentAlignment="Center"
                                                  BorderThickness="0"/>
                            <RepeatButton x:Name="PART_Increase" Grid.Row="0" Grid.Column="1" Width="20" BorderThickness="0" Margin="1">
                                <Path Data="M10,0 L0,20 8,20 10,15 12,20 20,20Z" Fill="DimGray" Stretch="Fill" StrokeLineJoin="Round" Width="8" Height="4"/>
                            </RepeatButton>
                            <RepeatButton x:Name="PART_Decrease" Grid.Row="1" Grid.Column="1" Width="20" BorderThickness="0" Margin="1">
                                <Path Data="M10,20 L0,0 8,0 10,5 12,0 20,0Z" Fill="DimGray" Stretch="Fill" StrokeLineJoin="Round" Width="8" Height="4"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** SimpleSplitView ********** -->

    <Style x:Key="ToggleArrowStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Circle"
                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                Duration="00:00:00.10"
                                                                To="#505C70"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Circle"
                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                Duration="00:00:00.10"
                                                                To="#606D82"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Circle"
                                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                Duration="00:00:00.10"
                                                                To="#606D82"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                                 Storyboard.TargetProperty="Angle" 
                                                                 Duration="00:00:00"
                                                                 To="180"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                                 Storyboard.TargetProperty="Angle" 
                                                                 Duration="00:00:00"
                                                                 To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="Circle" Fill="#606D82"/>
                        <Path Data="M6,0 L0,6 6,12" Stroke="White" StrokeThickness="2"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="RotateTransform" Angle="0" />
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="SimpleSplitView.Pane.Brush" Color="#DBDEE3"/>
    <Style TargetType="{x:Type local:SimpleSplitView}">
        <Setter Property="PaneBackground" Value="{StaticResource SimpleSplitView.Pane.Brush}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SimpleSplitView}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter />
                        <Grid x:Name="PART_Pane" Grid.Column="1" Background="{TemplateBinding PaneBackground}">
                            <ContentControl x:Name="PaneContent" Content="{TemplateBinding Pane}" Visibility="Collapsed"/>
                            <Canvas Grid.Column="1">
                                <ToggleButton IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Canvas.Left="-20" Canvas.Top="80" Height="40" Width="40"
                                              Style="{StaticResource ToggleArrowStyle}"/>
                                <ContentControl x:Name="Preview" Canvas.Left="40" Canvas.Top="136" Content="{TemplateBinding Preview}">
                                    <ContentControl.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="Canvas.Top" TargetName="Preview" Value="80" />
                            <Setter Property="Visibility" TargetName="PaneContent" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Preview" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** Flyout ********** -->

    <Style TargetType="{x:Type local:Flyout}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Flyout}">
                    <Grid x:Name="PART_ROOT">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OpenState">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="CloseContent" To="OpenContent">
                                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" >
                                                <DiscreteDoubleKeyFrame x:Name="OpenXFrame" KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.750" Value="0" KeySpline="0.2,1,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" >
                                                <DiscreteDoubleKeyFrame x:Name="OpenYFrame" KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.750" Value="0" KeySpline="0.2,1,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenContent" To="CloseContent">
                                        <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.750" Value="0" KeySpline="0.25,1,0.05,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" >
                                                <SplineDoubleKeyFrame x:Name="CloseXFrame" KeyTime="00:00:00.750" Value="0" KeySpline="0.25,1,0.05,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" >
                                                <SplineDoubleKeyFrame x:Name="CloseYFrame" KeyTime="00:00:00.750" Value="0" KeySpline="0.25,1,0.05,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="OpenContent">
                                    <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" >
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" >
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DirectOpenContent">
                                    <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" >
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" >
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CloseContent">
                                    <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DirectCloseContent">
                                    <Storyboard RenderOptions.BitmapScalingMode="LowQuality">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="LightDismissLayer" Visibility="Collapsed" Fill="{TemplateBinding Background}"/>
                        <Grid x:Name="PART_Content" MinHeight="{TemplateBinding OpenLength}" MinWidth="{TemplateBinding OpenLength}">
                            <Grid.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True"/>
                            </Grid.CacheMode>
                            <Grid.RenderTransform>
                                <TranslateTransform />
                            </Grid.RenderTransform>
                            <Rectangle x:Name="PART_Shadow" Width="10" HorizontalAlignment="Left" Margin="-5,0">
                                <Rectangle.CacheMode>
                                    <BitmapCache EnableClearType="True" />
                                </Rectangle.CacheMode>
                            </Rectangle>
                            <ContentPresenter x:Name="content" ContentSource="{TemplateBinding Content}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Color x:Key="gs0" A="155" R="120" G="120" B="120" />
                        <Color x:Key="gs1" A="10" R="120" G="120" B="120" />
                        <GradientStopCollection x:Key="ShadowGSC">
                            <GradientStop Color="{StaticResource gs1}" Offset="0.1" />
                            <GradientStop Color="{StaticResource gs0}" Offset="0.5" />
                            <GradientStop Color="{StaticResource gs1}" Offset="0.9" />
                        </GradientStopCollection>
                        <LinearGradientBrush x:Key="horizontalShadow" StartPoint="0,0" EndPoint="1,0" GradientStops="{StaticResource ShadowGSC}" />
                        <LinearGradientBrush x:Key="verticalShadow" StartPoint="0,0" EndPoint="0,1" GradientStops="{StaticResource ShadowGSC}" />
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="Visibility" TargetName="LightDismissLayer" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Target" Value="Horizontal">
                            <Setter Property="Height" TargetName="PART_Shadow" Value="{x:Static sys:Double.NaN}" />
                            <Setter Property="Width" TargetName="PART_Shadow" Value="10" />
                            <Setter Property="Margin" TargetName="PART_Shadow" Value="-5,0" />
                            <Setter Property="Fill" TargetName="PART_Shadow" Value="{StaticResource horizontalShadow}" />
                            <Setter Property="VerticalAlignment" TargetName="PART_Shadow" Value="Stretch" />
                            <Setter Property="VerticalAlignment" TargetName="PART_Content" Value="Stretch" />
                        </Trigger>
                        <Trigger Property="Target" Value="Vertical">
                            <Setter Property="Width" TargetName="PART_Shadow" Value="{x:Static sys:Double.NaN}" />
                            <Setter Property="Height" TargetName="PART_Shadow" Value="10" />
                            <Setter Property="Margin" TargetName="PART_Shadow" Value="0,-5" />
                            <Setter Property="Fill" TargetName="PART_Shadow" Value="{StaticResource verticalShadow}" />
                            <Setter Property="HorizontalAlignment" TargetName="PART_Shadow" Value="Stretch" />
                            <Setter Property="HorizontalAlignment" TargetName="PART_Content" Value="Stretch" />
                        </Trigger>
                        <Trigger Property="Placement" Value="Left">
                            <Setter Property="HorizontalAlignment" TargetName="PART_Shadow" Value="Right" />
                            <Setter Property="HorizontalAlignment" TargetName="PART_Content" Value="Left" />
                        </Trigger>
                        <Trigger Property="Placement" Value="Right">
                            <Setter Property="HorizontalAlignment" TargetName="PART_Shadow" Value="Left" />
                            <Setter Property="HorizontalAlignment" TargetName="PART_Content" Value="Right" />
                        </Trigger>
                        <Trigger Property="Placement" Value="Bottom">
                            <Setter Property="VerticalAlignment" TargetName="PART_Shadow" Value="Top" />
                            <Setter Property="VerticalAlignment" TargetName="PART_Content" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="Placement" Value="Top">
                            <Setter Property="VerticalAlignment" TargetName="PART_Shadow" Value="Bottom" />
                            <Setter Property="VerticalAlignment" TargetName="PART_Content" Value="Top" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** DelayFitSizeWrapper ********** -->

    <Style TargetType="{x:Type local:DelayFitSizeWrapper}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelayFitSizeWrapper}">
                    <Canvas x:Name="PART_WRAPPER">
                        <ContentPresenter x:Name="PART_CONTENT" ContentSource="{TemplateBinding Content}"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** PopupBox **********-->

    <Style TargetType="{x:Type local:PopupBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopupBox}">
                    <Grid Background="Transparent">
                        <ContentControl x:Name="PART_Content" Content="{TemplateBinding Content}" SnapsToDevicePixels="True"/>
                        <Popup x:Name="PART_Popup" Placement="Top" PlacementTarget="{Binding ElementName=PART_Content}"
                               AllowsTransparency="True" PopupAnimation="Fade" VerticalOffset="2">
                            <Grid Width="{Binding ActualWidth, ElementName=PART_Content}">
                                <Rectangle Fill="White" Opacity="0.002" />
                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ********** PolygonProgress **********-->


    <SolidColorBrush x:Key="Normal.Foreground" Color="#FF06B025" />
    <SolidColorBrush x:Key="Normal.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="Normal.BorderBrush" Color="#ff373737" />
    <Color x:Key="Inner.Color" A="180" R="242" G="242" B="242" />
    <SolidColorBrush x:Key="Normal.Inner.BorderBrush" Color="{StaticResource Inner.Color}" />
    <Color x:Key="text.Color" A="255" R="235" G="235" B="235" />
    <Color x:Key="Yellow.Color" A="255" R="183" G="190" B="24"/>
    <Color x:Key="Green.Color" A="255" R="103" G="165" B="30"/>
    <Color x:Key="Red.Color" A="255" R="223" G="88" B="65"/>
    <SolidColorBrush x:Key="Red.Foreground" Color="{StaticResource Red.Color}" />
    <SolidColorBrush x:Key="Yellow.Foreground" Color="{StaticResource Yellow.Color}" />
    <SolidColorBrush x:Key="Green.Foreground" Color="{StaticResource Green.Color}" />
    <SolidColorBrush x:Key="Text.Foreground" Color="{StaticResource text.Color}" />
    <Style TargetType="{x:Type local:PolygonProgress}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource Normal.BorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource Red.Foreground}" />
        <Setter Property="FontForeground" Value="{StaticResource Text.Foreground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="AroundData" Value="M0,0 L100,0 96,100 0,100 Z" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PolygonProgress}">
                    <Border Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="States">
                                <VisualState x:Name="RedState">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="PART_Rect"
                                                        Duration="0:0:0.1" To="{StaticResource Red.Color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="YellowState">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="PART_Rect"
                                                        Duration="0:0:0.1" To="{StaticResource Yellow.Color}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GreenState">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="PART_Rect"
                                                        Duration="0:0:0.1" To="{StaticResource Green.Color}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid Width="{TemplateBinding DescribeWidth}">
                                <local:OutlinedTextBlock x:Name="PART_Describe" Stroke="DarkSlateGray" StrokeThickness="3" Fill="{TemplateBinding FontForeground}" Text="{TemplateBinding Describe}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Grid>
                            <Grid Grid.Column="1" Height="{TemplateBinding BarHeight}">
                                <Path x:Name="borderPath" Data="{TemplateBinding AroundData}" Stroke="{StaticResource Normal.Inner.BorderBrush}" StrokeThickness="2" Stretch="Fill" Grid.Column="1">
                                </Path>
                                <Path x:Name="PART_Track" Data="{TemplateBinding AroundData}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding Stroke}" Stretch="Fill" Margin="1">
                                    <Path.Fill>
                                        <VisualBrush AlignmentX="Left" Stretch="None">
                                            <VisualBrush.RelativeTransform>
                                                <SkewTransform AngleX="-3"/>
                                            </VisualBrush.RelativeTransform>
                                            <VisualBrush.Visual>
                                                <Path x:Name="PART_Rect" Height="{TemplateBinding BarHeight}" Data="M0,0 H10 V10 H0 Z" Stretch="Fill" Fill="{TemplateBinding Foreground}" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Stroke" Value="0">
                            <Setter TargetName="borderPath" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Track" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

</ResourceDictionary>
